
git clone https://github.com/ashishrpandey/example-voting-app
cd example-voting-app
cd k8s-specifications
kubectl apply -f .
kubectl get po -o wide
kubectl get service
kubectl get deploy
kubectl get rs
cat vote-service.yaml
cat result-service.yaml
 Run the Voter and Result application using the below cmd
PublicIP::Port
Voter application:
http://18.143.138.27:31002/ 
Result Application:
http://18.143.138.27:31003/

Delete the VOTE Pod:
kubectl get po -o wide
NAME                      READY   STATUS    RESTARTS   AGE   IP              NODE               NOMINATED NODE   READINESS GATES
db-58cc845644-tdr99       1/1     Running   0          16m   192.168.4.76    ip-172-31-34-210   <none>           <none>
redis-6878558678-7bhvz    1/1     Running   0          16m   192.168.4.99    ip-172-31-34-210   <none>           <none>
result-86bc6f7b5d-whkk2   1/1     Running   0          16m   192.168.4.87    ip-172-31-34-210   <none>           <none>
vote-7d884dd585-qfbmf     1/1     Running   0          16m   192.168.4.89    ip-172-31-34-210   <none>           <none>
worker-6fc5d5b668-szjf7   1/1     Running   0          16m   192.168.4.103   ip-172-31-34-210   <none>           <none>

kubectl delete po vote-7d884dd585-qfbmf

kubectl get po -o wide
NAME                      READY   STATUS    RESTARTS   AGE   IP              NODE               NOMINATED NODE   READINESS GATES
db-58cc845644-tdr99       1/1     Running   0          16m   192.168.4.76    ip-172-31-34-210   <none>           <none>
redis-6878558678-7bhvz    1/1     Running   0          16m   192.168.4.99    ip-172-31-34-210   <none>           <none>
result-86bc6f7b5d-whkk2   1/1     Running   0          16m   192.168.4.87    ip-172-31-34-210   <none>           <none>
vote-7d884dd585-4j5j4     1/1     Running   0          6s    192.168.4.112   ip-172-31-34-210   <none>           <none>
worker-6fc5d5b668-szjf7   1/1     Running   0          16m   192.168.4.103   ip-172-31-34-210   <none>           <none>

Observation:
-----> Old Vote pod is deleted and new vote pod is recreated using the replica set.(pod name got changed)
-----> Vote application is running without any loosing data.

Delete the WORKER Pod:

 kubectl get po -o wide
NAME                      READY   STATUS    RESTARTS   AGE     IP              NODE               NOMINATED NODE   READINESS GATES
db-58cc845644-tdr99       1/1     Running   0          26m     192.168.4.76    ip-172-31-34-210   <none>           <none>
redis-6878558678-7bhvz    1/1     Running   0          26m     192.168.4.99    ip-172-31-34-210   <none>           <none>
result-86bc6f7b5d-whkk2   1/1     Running   0          26m     192.168.4.87    ip-172-31-34-210   <none>           <none>
vote-7d884dd585-hw6mk     1/1     Running   0          8m49s   192.168.4.104   ip-172-31-34-210   <none>           <none>
worker-6fc5d5b668-szjf7   1/1     Running   0          26m     192.168.4.103   ip-172-31-34-210   <none>           <none>

kubectl delete pod worker-6fc5d5b668-szjf7
pod "worker-6fc5d5b668-szjf7" deleted

kubectl get po -o wide
NAME                      READY   STATUS    RESTARTS   AGE    IP              NODE               NOMINATED NODE   READINESS GATES
db-58cc845644-tdr99       1/1     Running   0          27m    192.168.4.76    ip-172-31-34-210   <none>           <none>
redis-6878558678-7bhvz    1/1     Running   0          27m    192.168.4.99    ip-172-31-34-210   <none>           <none>
result-86bc6f7b5d-whkk2   1/1     Running   0          27m    192.168.4.87    ip-172-31-34-210   <none>           <none>
vote-7d884dd585-hw6mk     1/1     Running   0          9m6s   192.168.4.104   ip-172-31-34-210   <none>           <none>
worker-6fc5d5b668-47f9r   1/1     Running   0          3s     192.168.4.98    ip-172-31-34-210   <none>           <none>

Observation:
-----> Old Worker pod is deleted and new Worker pod is recreated using the replica set.(pod name got changed)
-----> Worker application is running without any loosing data.

Delete the DB Pod:

kubectl get po -o wide
NAME                      READY   STATUS    RESTARTS      AGE     IP              NODE               NOMINATED NODE   READINESS GATES
db-58cc845644-mfdqw       1/1     Running   0             63s     192.168.4.92    ip-172-31-34-210   <none>           <none>
redis-6878558678-7bhvz    1/1     Running   0             30m     192.168.4.99    ip-172-31-34-210   <none>           <none>
result-86bc6f7b5d-whkk2   1/1     Running   1 (33s ago)   30m     192.168.4.87    ip-172-31-34-210   <none>           <none>
vote-7d884dd585-hw6mk     1/1     Running   0             12m     192.168.4.104   ip-172-31-34-210   <none>           <none>
worker-6fc5d5b668-47f9r   1/1     Running   1 (33s ago)   3m49s   192.168.4.98    ip-172-31-34-210   <none>           <none>

 kubectl delete pod db-58cc845644-mfdqw

pod "db-58cc845644-mfdqw" deleted

 kubectl get po -o wide
NAME                      READY   STATUS        RESTARTS      AGE     IP              NODE               NOMINATED NODE   READINESS GATES
db-58cc845644-924pp       1/1     Running       0             22s     192.168.4.108   ip-172-31-34-210   <none>           <none>
db-58cc845644-mfdqw       1/1     Terminating   0             102s    192.168.4.92    ip-172-31-34-210   <none>           <none>
redis-6878558678-7bhvz    1/1     Running       0             31m     192.168.4.99    ip-172-31-34-210   <none>           <none>
result-86bc6f7b5d-whkk2   1/1     Running       1 (72s ago)   31m     192.168.4.87    ip-172-31-34-210   <none>           <none>
vote-7d884dd585-hw6mk     1/1     Running       0             13m     192.168.4.104   ip-172-31-34-210   <none>           <none>
worker-6fc5d5b668-47f9r   1/1     Running       1 (72s ago)   4m28s   192.168.4.98    ip-172-31-34-210   <none>           <none>

kubectl get po -o wide
NAME                      READY   STATUS    RESTARTS      AGE     IP              NODE               NOMINATED NODE   READINESS GATES
db-58cc845644-924pp       1/1     Running   0             39s     192.168.4.108   ip-172-31-34-210   <none>           <none>
redis-6878558678-7bhvz    1/1     Running   0             31m     192.168.4.99    ip-172-31-34-210   <none>           <none>
result-86bc6f7b5d-whkk2   0/1     Error     1 (89s ago)   31m     192.168.4.87    ip-172-31-34-210   <none>           <none>
vote-7d884dd585-hw6mk     1/1     Running   0             13m     192.168.4.104   ip-172-31-34-210   <none>           <none>
worker-6fc5d5b668-47f9r   0/1     Error     1 (89s ago)   4m45s   192.168.4.98    ip-172-31-34-210   <none>           <none>

kubectl get po -o wide
NAME                      READY   STATUS    RESTARTS      AGE    IP              NODE               NOMINATED NODE   READINESS GATES
db-58cc845644-924pp       1/1     Running   0             62s    192.168.4.108   ip-172-31-34-210   <none>           <none>
redis-6878558678-7bhvz    1/1     Running   0             32m    192.168.4.99    ip-172-31-34-210   <none>           <none>
result-86bc6f7b5d-whkk2   1/1     Running   2 (32s ago)   32m    192.168.4.87    ip-172-31-34-210   <none>           <none>
vote-7d884dd585-hw6mk     1/1     Running   0             14m    192.168.4.104   ip-172-31-34-210   <none>           <none>
worker-6fc5d5b668-47f9r   1/1     Running   2 (32s ago)   5m8s   192.168.4.98    ip-172-31-34-210   <none>           <none>


Observation:
-----> Old DB pod is deleted and new Worker pod is recreated using the replica set. (pod name got changed)
----->  After Creating the New db pod, Result  and worker pods are restarted due to both pods having Dependency on Database. if the db pod delete, dependent pods will restart.
     Voter and worker pod status moved Error to CrashLoopBackOff then Running status
---> Vote and Result application are running fine.

 your comment on WHY result app STOPPED working after db pod stop

After deleting db pod, Result pod got immediate restart.
After restarted result pod, Result application hold the Image data --Continer inside the Result pod.


your answer to HOW YOU MADE THE RESULT POD work.

Result pod is created using the deployment. 
if the result pod is deleted , it will create the pod based on replicas number which is mentioned in result deployment config.

Result application will hold the latest data after refresh the Voter application.



Some jargons (just names are enough- dont need sentences) that you learnt from the  Training session


